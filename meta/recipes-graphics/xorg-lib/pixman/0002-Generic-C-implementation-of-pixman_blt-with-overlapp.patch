From 211b2bcdb19f86f3868a18520df7dcb4fd122f05 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Sun, 19 Aug 2012 14:48:00 +0200
Subject: [PATCH 2/2] Generic C implementation of pixman_blt with overlapping
 support
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This was ported from meta-oe's patch [1]:
Uses memcpy/memmove functions to copy pixels, can handle the
case when both source and destination areas are in the same
image (this is useful for scrolling).

It is assumed that copying direction is only important when
using the same image for both source and destination (and
src_stride == dst_stride). Copying direction is undefined
for the images with different source and destination stride
which happen to be in the overlapped areas (but this is an
unrealistic case anyway).

[1] http://cgit.openembedded.org/meta-openembedded/tree/meta-oe/recipes-graphics/xorg-lib/pixman-0.26.2/0008-Generic-C-implementation-of-pixman_blt-with-overlapp.patch

Upstream-Status: Unknown - this patch is in meta-oe for a while

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 pixman/pixman-general.c |   21 ++++++++++++++++++---
 pixman/pixman-private.h |   43 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 61 insertions(+), 3 deletions(-)

diff --git a/pixman/pixman-general.c b/pixman/pixman-general.c
index d4b2daa..a86b206 100644
--- a/pixman/pixman-general.c
+++ b/pixman/pixman-general.c
@@ -215,9 +215,24 @@ general_blt (pixman_implementation_t *imp,
              int                      width,
              int                      height)
 {
-    /* We can't blit unless we have sse2 or mmx */
-
-    return FALSE;
+    uint8_t *dst_bytes = (uint8_t *)dst_bits;
+    uint8_t *src_bytes = (uint8_t *)src_bits;
+    int bpp;
+
+    if (src_bpp != dst_bpp || src_bpp & 7)
+	return FALSE;
+
+    bpp = src_bpp >> 3;
+    width *= bpp;
+    src_stride *= 4;
+    dst_stride *= 4;
+    pixman_blt_helper (src_bytes + src_y * src_stride + src_x * bpp,
+                       dst_bytes + dest_y * dst_stride + dest_x * bpp,
+                       src_stride,
+                       dst_stride,
+                       width,
+                       height);
+    return TRUE;
 }
 
 static pixman_bool_t
diff --git a/pixman/pixman-private.h b/pixman/pixman-private.h
index d5e6a72..c77d256 100644
--- a/pixman/pixman-private.h
+++ b/pixman/pixman-private.h
@@ -24,6 +24,7 @@
 
 #include "pixman.h"
 #include <time.h>
+#include <string.h>
 #include <assert.h>
 #include <stdio.h>
 #include <string.h>
@@ -1096,6 +1097,48 @@ void pixman_timer_register (pixman_timer_t *timer);
 extern const uint8_t linear_to_srgb[4096];
 extern const uint16_t srgb_to_linear[256];
 
+/* a helper function, can blit 8-bit images with src/dst overlapping support */
+static inline void
+pixman_blt_helper (uint8_t *src_bytes,
+                   uint8_t *dst_bytes,
+                   int      src_stride,
+                   int      dst_stride,
+                   int      width,
+                   int      height)
+{
+    /*
+     * The second part of this check is not strictly needed, but it prevents
+     * unnecessary upside-down processing of areas which belong to different
+     * images. Upside-down processing can be slower with fixed-distance-ahead
+     * prefetch and perceived as having more tearing.
+     */
+    if (src_bytes < dst_bytes + width &&
+	src_bytes + src_stride * height > dst_bytes)
+    {
+	src_bytes += src_stride * height - src_stride;
+	dst_bytes += dst_stride * height - dst_stride;
+	dst_stride = -dst_stride;
+	src_stride = -src_stride;
+	/* Horizontal scrolling to the left needs memmove */
+	if (src_bytes + width > dst_bytes)
+	{
+	    while (--height >= 0)
+	    {
+		memmove (dst_bytes, src_bytes, width);
+		dst_bytes += dst_stride;
+		src_bytes += src_stride;
+	    }
+	    return;
+	}
+    }
+    while (--height >= 0)
+    {
+	memcpy (dst_bytes, src_bytes, width);
+	dst_bytes += dst_stride;
+	src_bytes += src_stride;
+    }
+}
+
 #endif /* __ASSEMBLER__ */
 
 #endif /* PIXMAN_PRIVATE_H */
-- 
1.7.4.4

